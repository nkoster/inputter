{"ast":null,"code":"var _jsxFileName = \"/home/niels/src/js/react/inputter/src/components/Lister.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { DataGrid } from '@material-ui/data-grid';\nimport { useHistory } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Lister = ({\n  data,\n  limit\n}) => {\n  _s();\n\n  const history = useHistory();\n\n  const renderCell = data => {\n    const onClick = _ => {\n      history.push({\n        pathname: `/details/${data.row.kafka_topic}/${data.row.kafka_offset}`,\n        state: {\n          identifierType: data.row.identifier_type,\n          identifierValue: data.row.identifier_value\n        }\n      });\n    };\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      onClick: onClick,\n      style: {\n        cursor: 'pointer'\n      },\n      children: data.row.kafka_offset\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this);\n  };\n\n  const columns = [{\n    field: 'kafka_topic',\n    headerName: 'Topic',\n    flex: 1\n  }, {\n    field: 'kafka_partition',\n    headerName: 'Partition',\n    flex: 0.2\n  }, {\n    field: 'kafka_offset',\n    headerName: 'Offset',\n    flex: 0.3,\n    renderCell\n  }, {\n    field: 'identifier_type',\n    headerName: 'Identifier Type',\n    flex: 0.6\n  }, {\n    field: 'identifier_value',\n    headerName: 'Identifier Value',\n    flex: 1\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      height: '82vh',\n      width: '100%'\n    },\n    children: [data.length > 0 && data.length < limit && /*#__PURE__*/_jsxDEV(DataGrid, {\n      hideFooter: true,\n      rows: data.map(d => {\n        return { ...d,\n          id: Math.random().toString(20)\n        };\n      }),\n      columns: columns\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 52\n    }, this), data.length >= limit && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        fontSize: 14\n      },\n      children: \"Too many rows\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 32\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Lister, \"9cZfZ04734qoCGIctmKX7+sX6eU=\", false, function () {\n  return [useHistory];\n});\n\n_c = Lister;\nexport default Lister;\n\nvar _c;\n\n$RefreshReg$(_c, \"Lister\");","map":{"version":3,"sources":["/home/niels/src/js/react/inputter/src/components/Lister.js"],"names":["React","DataGrid","useHistory","Lister","data","limit","history","renderCell","onClick","_","push","pathname","row","kafka_topic","kafka_offset","state","identifierType","identifier_type","identifierValue","identifier_value","cursor","columns","field","headerName","flex","height","width","length","map","d","id","Math","random","toString","fontSize"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,wBAAzB;AACA,SAASC,UAAT,QAA2B,kBAA3B;;;AAEA,MAAMC,MAAM,GAAG,CAAC;AAACC,EAAAA,IAAD;AAAOC,EAAAA;AAAP,CAAD,KAAmB;AAAA;;AAEhC,QAAMC,OAAO,GAAGJ,UAAU,EAA1B;;AAEA,QAAMK,UAAU,GAAGH,IAAI,IAAI;AACvB,UAAMI,OAAO,GAAGC,CAAC,IAAI;AACrBH,MAAAA,OAAO,CAACI,IAAR,CAAa;AACXC,QAAAA,QAAQ,EAAG,YAAWP,IAAI,CAACQ,GAAL,CAASC,WAAY,IAAGT,IAAI,CAACQ,GAAL,CAASE,YAAa,EADzD;AAEXC,QAAAA,KAAK,EAAE;AACLC,UAAAA,cAAc,EAAEZ,IAAI,CAACQ,GAAL,CAASK,eADpB;AAELC,UAAAA,eAAe,EAAEd,IAAI,CAACQ,GAAL,CAASO;AAFrB;AAFI,OAAb;AAOD,KARC;;AAUF,wBACE;AACE,MAAA,OAAO,EAAEX,OADX;AAEE,MAAA,KAAK,EAAE;AAACY,QAAAA,MAAM,EAAE;AAAT,OAFT;AAAA,gBAGEhB,IAAI,CAACQ,GAAL,CAASE;AAHX;AAAA;AAAA;AAAA;AAAA,YADF;AAMD,GAjBD;;AAmBA,QAAMO,OAAO,GAAG,CACd;AAAEC,IAAAA,KAAK,EAAE,aAAT;AAAwBC,IAAAA,UAAU,EAAE,OAApC;AAA6CC,IAAAA,IAAI,EAAE;AAAnD,GADc,EAEd;AAAEF,IAAAA,KAAK,EAAE,iBAAT;AAA4BC,IAAAA,UAAU,EAAE,WAAxC;AAAqDC,IAAAA,IAAI,EAAE;AAA3D,GAFc,EAGd;AAAEF,IAAAA,KAAK,EAAE,cAAT;AAAyBC,IAAAA,UAAU,EAAE,QAArC;AAA+CC,IAAAA,IAAI,EAAE,GAArD;AAA0DjB,IAAAA;AAA1D,GAHc,EAId;AAAEe,IAAAA,KAAK,EAAE,iBAAT;AAA4BC,IAAAA,UAAU,EAAE,iBAAxC;AAA2DC,IAAAA,IAAI,EAAE;AAAjE,GAJc,EAKd;AAAEF,IAAAA,KAAK,EAAE,kBAAT;AAA6BC,IAAAA,UAAU,EAAE,kBAAzC;AAA6DC,IAAAA,IAAI,EAAE;AAAnE,GALc,CAAhB;AAQA,sBACE;AAAK,IAAA,KAAK,EAAE;AAAEC,MAAAA,MAAM,EAAE,MAAV;AAAkBC,MAAAA,KAAK,EAAE;AAAzB,KAAZ;AAAA,eACItB,IAAI,CAACuB,MAAL,GAAc,CAAd,IAAmBvB,IAAI,CAACuB,MAAL,GAActB,KAAlC,iBAA4C,QAAC,QAAD;AAAU,MAAA,UAAU,MAApB;AAAqB,MAAA,IAAI,EAAED,IAAI,CAACwB,GAAL,CAASC,CAAC,IAAI;AACpF,eAAO,EAAE,GAAGA,CAAL;AAAQC,UAAAA,EAAE,EAAEC,IAAI,CAACC,MAAL,GAAcC,QAAd,CAAuB,EAAvB;AAAZ,SAAP;AACD,OAFuE,CAA3B;AAEzC,MAAA,OAAO,EAAEZ;AAFgC;AAAA;AAAA;AAAA;AAAA,YAD/C,EAIGjB,IAAI,CAACuB,MAAL,IAAetB,KAAf,iBAAwB;AAAG,MAAA,KAAK,EAAE;AAAC6B,QAAAA,QAAQ,EAAE;AAAX,OAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJ3B;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAQD,CAvCD;;GAAM/B,M;UAEYD,U;;;KAFZC,M;AAyCN,eAAeA,MAAf","sourcesContent":["import React from 'react'\nimport { DataGrid } from '@material-ui/data-grid'\nimport { useHistory } from 'react-router-dom'\n\nconst Lister = ({data, limit}) => {\n\n  const history = useHistory()\n  \n  const renderCell = data => {\n      const onClick = _ => {\n      history.push({\n        pathname: `/details/${data.row.kafka_topic}/${data.row.kafka_offset}`,\n        state: {\n          identifierType: data.row.identifier_type,\n          identifierValue: data.row.identifier_value\n        }\n      })\n    }\n\n    return (\n      <div\n        onClick={onClick}\n        style={{cursor: 'pointer'}}\n      >{data.row.kafka_offset}</div>\n    )\n  }\n  \n  const columns = [\n    { field: 'kafka_topic', headerName: 'Topic', flex: 1 },\n    { field: 'kafka_partition', headerName: 'Partition', flex: 0.2 },\n    { field: 'kafka_offset', headerName: 'Offset', flex: 0.3, renderCell },\n    { field: 'identifier_type', headerName: 'Identifier Type', flex: 0.6 },\n    { field: 'identifier_value', headerName: 'Identifier Value', flex: 1 },\n  ]\n\n  return (\n    <div style={{ height: '82vh', width: '100%' }}>\n      {(data.length > 0 && data.length < limit) && <DataGrid hideFooter rows={data.map(d => {\n        return { ...d, id: Math.random().toString(20)}\n      })} columns={columns} />}\n      {data.length >= limit && <p style={{fontSize: 14}}>Too many rows</p>}\n    </div>\n  )\n}\n\nexport default Lister\n"]},"metadata":{},"sourceType":"module"}