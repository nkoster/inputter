{"ast":null,"code":"var _jsxFileName = \"/home/niels/src/js/react/seeker/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport './App.css';\nimport { TextField } from '@material-ui/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [query, setQuery] = useState('');\n  const [data, setData] = useState([]);\n\n  const onChange = async evt => setQuery(evt.target.value);\n\n  useEffect(async _ => {\n    const response = await fetch(`https://jsonplaceholder.typicode.com/todos/${query}`).then(res => res.json());\n    console.log('RESPONSE', response);\n    setData(response);\n  }, [query]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        onChange: onChange,\n        value: query,\n        color: \"primary\",\n        type: \"search\",\n        label: \"search\",\n        placeholder: \"...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 7\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: Array.isArray(data) ? data.map(d => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: d.title\n        }, d.title, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 46\n        }, this)) : /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"data.title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 82\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"NCyI9XifwuBsYAIpBpMIGq3IihA=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/niels/src/js/react/seeker/src/App.js"],"names":["useState","useEffect","TextField","App","query","setQuery","data","setData","onChange","evt","target","value","_","response","fetch","then","res","json","console","log","Array","isArray","map","d","title"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAO,WAAP;AACA,SAASC,SAAT,QAA0B,mBAA1B;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AAEb,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACM,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,CAAC,EAAD,CAAhC;;AAEA,QAAMQ,QAAQ,GAAG,MAAMC,GAAN,IAAaJ,QAAQ,CAACI,GAAG,CAACC,MAAJ,CAAWC,KAAZ,CAAtC;;AAEAV,EAAAA,SAAS,CAAC,MAAMW,CAAN,IAAW;AACnB,UAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,8CAA6CV,KAAM,EAArD,CAAL,CACpBW,IADoB,CACfC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADQ,CAAvB;AAEEC,IAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAuBN,QAAvB;AACFN,IAAAA,OAAO,CAACM,QAAD,CAAP;AACD,GALQ,EAKN,CAACT,KAAD,CALM,CAAT;AAOA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,2BACE;AAAQ,MAAA,SAAS,EAAC,YAAlB;AAAA,8BACA,QAAC,SAAD;AACE,QAAA,QAAQ,EAAEI,QADZ;AAEE,QAAA,KAAK,EAAEJ,KAFT;AAGE,QAAA,KAAK,EAAC,SAHR;AAIE,QAAA,IAAI,EAAC,QAJP;AAKE,QAAA,KAAK,EAAC,QALR;AAME,QAAA,WAAW,EAAC;AANd;AAAA;AAAA;AAAA;AAAA,cADA,oBASA;AAAA,kBACGgB,KAAK,CAACC,OAAN,CAAcf,IAAd,IAAsBA,IAAI,CAACgB,GAAL,CAASC,CAAC,iBAAI;AAAA,oBAAmBA,CAAC,CAACC;AAArB,WAASD,CAAC,CAACC,KAAX;AAAA;AAAA;AAAA;AAAA,gBAAd,CAAtB,gBAAwE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAD3E;AAAA;AAAA;AAAA;AAAA,cATA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAkBD;;GAhCQrB,G;;KAAAA,G;AAkCT,eAAeA,GAAf","sourcesContent":["import { useState, useEffect } from 'react'\nimport './App.css'\nimport { TextField } from '@material-ui/core'\n\nfunction App() {\n\n  const [query, setQuery] = useState('')\n  const [data, setData] = useState([])\n\n  const onChange = async evt => setQuery(evt.target.value)\n\n  useEffect(async _ => {\n    const response = await fetch(`https://jsonplaceholder.typicode.com/todos/${query}`)\n      .then(res => res.json())\n      console.log('RESPONSE',response)\n    setData(response)\n  }, [query])\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n      <TextField\n        onChange={onChange}\n        value={query}\n        color='primary'\n        type='search'\n        label='search'\n        placeholder='...'\n      /> {/* text color in App.css: input */}\n      <ul>\n        {Array.isArray(data) ? data.map(d => <li key={d.title}>{d.title}</li>) : <li>data.title</li>}\n        </ul>\n      </header>\n    </div>\n  )\n\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}