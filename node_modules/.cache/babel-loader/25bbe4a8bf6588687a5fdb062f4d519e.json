{"ast":null,"code":"var _jsxFileName = \"/home/niels/src/js/react/inputter/src/components/Lister.js\";\nimport React from 'react';\nimport { LinearProgress } from '@material-ui/core';\nimport { DataGrid } from '@material-ui/data-grid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst columns = [{\n  field: 'kafka_topic',\n  headerName: 'Kafka Topic',\n  flex: 1\n}, {\n  field: 'kafka_offset',\n  headerName: 'Kafka Offset',\n  width: 200\n}, {\n  field: 'identifier_type',\n  headerName: 'Identifier Type',\n  width: 200\n}, {\n  field: 'identifier_value',\n  headerName: 'Identifier Value',\n  width: 300\n}];\n\nconst ShowGridOrLoad = ({\n  loading\n}) => {\n  const show = loading ? /*#__PURE__*/_jsxDEV(LinearProgress, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 26\n  }, this) : /*#__PURE__*/_jsxDEV(DataGrid, {\n    hideFooter: true,\n    rows: data.map(d => {\n      return { ...d,\n        id: Math.random().toString(20)\n      };\n    }),\n    columns: columns\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 47\n  }, this);\n  return show;\n};\n\n_c = ShowGridOrLoad;\n\nconst Lister = ({\n  data,\n  loading\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      height: 500,\n      width: '100%'\n    },\n    children: data.length > 0 && /*#__PURE__*/_jsxDEV(ShowGridOrLoad, {\n      loading: loading\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 27\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n\n_c2 = Lister;\nexport default Lister;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ShowGridOrLoad\");\n$RefreshReg$(_c2, \"Lister\");","map":{"version":3,"sources":["/home/niels/src/js/react/inputter/src/components/Lister.js"],"names":["React","LinearProgress","DataGrid","columns","field","headerName","flex","width","ShowGridOrLoad","loading","show","data","map","d","id","Math","random","toString","Lister","height","length"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,cAAT,QAA+B,mBAA/B;AACA,SAASC,QAAT,QAAyB,wBAAzB;;AAEA,MAAMC,OAAO,GAAG,CACd;AAAEC,EAAAA,KAAK,EAAE,aAAT;AAAwBC,EAAAA,UAAU,EAAE,aAApC;AAAmDC,EAAAA,IAAI,EAAE;AAAzD,CADc,EAEd;AAAEF,EAAAA,KAAK,EAAE,cAAT;AAAyBC,EAAAA,UAAU,EAAE,cAArC;AAAqDE,EAAAA,KAAK,EAAE;AAA5D,CAFc,EAGd;AAAEH,EAAAA,KAAK,EAAE,iBAAT;AAA4BC,EAAAA,UAAU,EAAE,iBAAxC;AAA2DE,EAAAA,KAAK,EAAE;AAAlE,CAHc,EAId;AAAEH,EAAAA,KAAK,EAAE,kBAAT;AAA6BC,EAAAA,UAAU,EAAE,kBAAzC;AAA6DE,EAAAA,KAAK,EAAE;AAApE,CAJc,CAAhB;;AAOA,MAAMC,cAAc,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAe;AACpC,QAAMC,IAAI,GAAGD,OAAO,gBAAG,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA,UAAH,gBAAwB,QAAC,QAAD;AAAU,IAAA,UAAU,MAApB;AAAqB,IAAA,IAAI,EAAEE,IAAI,CAACC,GAAL,CAASC,CAAC,IAAI;AACnF,aAAO,EAAE,GAAGA,CAAL;AAAQC,QAAAA,EAAE,EAAEC,IAAI,CAACC,MAAL,GAAcC,QAAd,CAAuB,EAAvB;AAAZ,OAAP;AACD,KAFsE,CAA3B;AAExC,IAAA,OAAO,EAAEd;AAF+B;AAAA;AAAA;AAAA;AAAA,UAA5C;AAGA,SAAOO,IAAP;AACD,CALD;;KAAMF,c;;AAON,MAAMU,MAAM,GAAG,CAAC;AAACP,EAAAA,IAAD;AAAOF,EAAAA;AAAP,CAAD,KAAqB;AAClC,sBACE;AAAK,IAAA,KAAK,EAAE;AAAEU,MAAAA,MAAM,EAAE,GAAV;AAAeZ,MAAAA,KAAK,EAAE;AAAtB,KAAZ;AAAA,cACGI,IAAI,CAACS,MAAL,GAAc,CAAd,iBAAmB,QAAC,cAAD;AAAgB,MAAA,OAAO,EAAEX;AAAzB;AAAA;AAAA;AAAA;AAAA;AADtB;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CAND;;MAAMS,M;AAQN,eAAeA,MAAf","sourcesContent":["import React from 'react'\nimport { LinearProgress } from '@material-ui/core'\nimport { DataGrid } from '@material-ui/data-grid'\n\nconst columns = [\n  { field: 'kafka_topic', headerName: 'Kafka Topic', flex: 1 },\n  { field: 'kafka_offset', headerName: 'Kafka Offset', width: 200 },\n  { field: 'identifier_type', headerName: 'Identifier Type', width: 200 },\n  { field: 'identifier_value', headerName: 'Identifier Value', width: 300 },\n]\n\nconst ShowGridOrLoad = ({loading}) => {\n  const show = loading ? <LinearProgress /> : <DataGrid hideFooter rows={data.map(d => {\n    return { ...d, id: Math.random().toString(20)}\n  })} columns={columns} />\n  return show\n}\n\nconst Lister = ({data, loading}) => {\n  return (\n    <div style={{ height: 500, width: '100%' }}>\n      {data.length > 0 && <ShowGridOrLoad loading={loading} />}\n    </div>\n  )\n}\n\nexport default Lister\n"]},"metadata":{},"sourceType":"module"}