{"ast":null,"code":"import _objectSpread from\"/home/niels/src/js/react/inputter/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import React from'react';import{DataGrid}from'@material-ui/data-grid';import{useHistory}from'react-router-dom';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Lister=function Lister(_ref){var data=_ref.data,limit=_ref.limit;var history=useHistory();var renderCell=function renderCell(data){var onClick=function onClick(_){history.push({pathname:\"/details/\".concat(data.row.kafka_topic,\"/\").concat(data.row.kafka_offset),state:{identifierType:data.row.identifier_type,identifierValue:data.row.identifier_value}});};return/*#__PURE__*/_jsx(\"div\",{onClick:onClick,style:{cursor:'pointer'},children:data.row.kafka_offset});};var columns=[{field:'kafka_topic',headerName:'Kafka Topic',flex:1},{field:'kafka_offset',headerName:'Kafka Offset',flex:0.4,renderCell:renderCell},{field:'identifier_type',headerName:'Identifier Type',flex:0.6},{field:'identifier_value',headerName:'Identifier Value',flex:1}];return/*#__PURE__*/_jsxs(\"div\",{style:{height:'82vh',width:'100%'},children:[data.length>0&&data.length<limit&&/*#__PURE__*/_jsx(DataGrid,{hideFooter:true,rows:data.map(function(d){return _objectSpread(_objectSpread({},d),{},{id:Math.random().toString(20)});}),columns:columns}),data.length>=limit&&/*#__PURE__*/_jsx(\"p\",{style:{fontSize:14},children:\"Too many rows\"})]});};export default Lister;","map":{"version":3,"sources":["/home/niels/src/js/react/inputter/src/components/Lister.js"],"names":["React","DataGrid","useHistory","Lister","data","limit","history","renderCell","onClick","_","push","pathname","row","kafka_topic","kafka_offset","state","identifierType","identifier_type","identifierValue","identifier_value","cursor","columns","field","headerName","flex","height","width","length","map","d","id","Math","random","toString","fontSize"],"mappings":"mHAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,QAAT,KAAyB,wBAAzB,CACA,OAASC,UAAT,KAA2B,kBAA3B,C,wFAEA,GAAMC,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,MAAmB,IAAjBC,CAAAA,IAAiB,MAAjBA,IAAiB,CAAXC,KAAW,MAAXA,KAAW,CAEhC,GAAMC,CAAAA,OAAO,CAAGJ,UAAU,EAA1B,CAEA,GAAMK,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAAAH,IAAI,CAAI,CACvB,GAAMI,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,CAAAC,CAAC,CAAI,CACrBH,OAAO,CAACI,IAAR,CAAa,CACXC,QAAQ,oBAAcP,IAAI,CAACQ,GAAL,CAASC,WAAvB,aAAsCT,IAAI,CAACQ,GAAL,CAASE,YAA/C,CADG,CAEXC,KAAK,CAAE,CACLC,cAAc,CAAEZ,IAAI,CAACQ,GAAL,CAASK,eADpB,CAELC,eAAe,CAAEd,IAAI,CAACQ,GAAL,CAASO,gBAFrB,CAFI,CAAb,EAOD,CARC,CAUF,mBACE,YACE,OAAO,CAAEX,OADX,CAEE,KAAK,CAAE,CAACY,MAAM,CAAE,SAAT,CAFT,UAGEhB,IAAI,CAACQ,GAAL,CAASE,YAHX,EADF,CAMD,CAjBD,CAmBA,GAAMO,CAAAA,OAAO,CAAG,CACd,CAAEC,KAAK,CAAE,aAAT,CAAwBC,UAAU,CAAE,aAApC,CAAmDC,IAAI,CAAE,CAAzD,CADc,CAEd,CAAEF,KAAK,CAAE,cAAT,CAAyBC,UAAU,CAAE,cAArC,CAAqDC,IAAI,CAAE,GAA3D,CAAgEjB,UAAU,CAAVA,UAAhE,CAFc,CAGd,CAAEe,KAAK,CAAE,iBAAT,CAA4BC,UAAU,CAAE,iBAAxC,CAA2DC,IAAI,CAAE,GAAjE,CAHc,CAId,CAAEF,KAAK,CAAE,kBAAT,CAA6BC,UAAU,CAAE,kBAAzC,CAA6DC,IAAI,CAAE,CAAnE,CAJc,CAAhB,CAOA,mBACE,aAAK,KAAK,CAAE,CAAEC,MAAM,CAAE,MAAV,CAAkBC,KAAK,CAAE,MAAzB,CAAZ,WACItB,IAAI,CAACuB,MAAL,CAAc,CAAd,EAAmBvB,IAAI,CAACuB,MAAL,CAActB,KAAlC,eAA4C,KAAC,QAAD,EAAU,UAAU,KAApB,CAAqB,IAAI,CAAED,IAAI,CAACwB,GAAL,CAAS,SAAAC,CAAC,CAAI,CACpF,sCAAYA,CAAZ,MAAeC,EAAE,CAAEC,IAAI,CAACC,MAAL,GAAcC,QAAd,CAAuB,EAAvB,CAAnB,GACD,CAFuE,CAA3B,CAEzC,OAAO,CAAEZ,OAFgC,EAD/C,CAIGjB,IAAI,CAACuB,MAAL,EAAetB,KAAf,eAAwB,UAAG,KAAK,CAAE,CAAC6B,QAAQ,CAAE,EAAX,CAAV,2BAJ3B,GADF,CAQD,CAtCD,CAwCA,cAAe/B,CAAAA,MAAf","sourcesContent":["import React from 'react'\nimport { DataGrid } from '@material-ui/data-grid'\nimport { useHistory } from 'react-router-dom'\n\nconst Lister = ({data, limit}) => {\n\n  const history = useHistory()\n  \n  const renderCell = data => {\n      const onClick = _ => {\n      history.push({\n        pathname: `/details/${data.row.kafka_topic}/${data.row.kafka_offset}`,\n        state: {\n          identifierType: data.row.identifier_type,\n          identifierValue: data.row.identifier_value\n        }\n      })\n    }\n\n    return (\n      <div\n        onClick={onClick}\n        style={{cursor: 'pointer'}}\n      >{data.row.kafka_offset}</div>\n    )\n  }\n  \n  const columns = [\n    { field: 'kafka_topic', headerName: 'Kafka Topic', flex: 1 },\n    { field: 'kafka_offset', headerName: 'Kafka Offset', flex: 0.4, renderCell },\n    { field: 'identifier_type', headerName: 'Identifier Type', flex: 0.6 },\n    { field: 'identifier_value', headerName: 'Identifier Value', flex: 1 },\n  ]\n\n  return (\n    <div style={{ height: '82vh', width: '100%' }}>\n      {(data.length > 0 && data.length < limit) && <DataGrid hideFooter rows={data.map(d => {\n        return { ...d, id: Math.random().toString(20)}\n      })} columns={columns} />}\n      {data.length >= limit && <p style={{fontSize: 14}}>Too many rows</p>}\n    </div>\n  )\n}\n\nexport default Lister\n"]},"metadata":{},"sourceType":"module"}