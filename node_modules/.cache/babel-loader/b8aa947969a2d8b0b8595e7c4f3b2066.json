{"ast":null,"code":"var _jsxFileName = \"/home/niels/src/js/react/inputter/src/components/Lister.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { DataGrid } from '@material-ui/data-grid';\nimport { useHistory } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst RenderCell = data => {\n  _s();\n\n  const history = useHistory(); // const onClick = _ => {\n  //   history.push({\n  //     pathname: `/details/${data.row.kafka_topic}/${data.row.kafka_offset}`,\n  //     state: {\n  //       identifierType: data.row.identifier_type,\n  //       identifierValue: data.row.identifier_value\n  //     }\n  //   })\n  // }\n\n  console.log('HOI', data.row);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    // onClick={onClick}\n    style: {\n      cursor: 'pointer'\n    },\n    children: [\"aap\", data.row.kafka_offset]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n};\n\n_s(RenderCell, \"9cZfZ04734qoCGIctmKX7+sX6eU=\", false, function () {\n  return [useHistory];\n});\n\n_c = RenderCell;\nconst columns = [{\n  field: 'kafka_topic',\n  headerName: 'Kafka Topic',\n  flex: 1\n}, {\n  field: 'kafka_offset',\n  headerName: 'Kafka Offset',\n  flex: 0.4,\n  RenderCell\n}, {\n  field: 'identifier_type',\n  headerName: 'Identifier Type',\n  flex: 0.6\n}, {\n  field: 'identifier_value',\n  headerName: 'Identifier Value',\n  flex: 1\n}];\n\nconst Lister = ({\n  data,\n  limit\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      height: '82vh',\n      width: '100%'\n    },\n    children: [data.length > 0 && data.length < limit && /*#__PURE__*/_jsxDEV(DataGrid, {\n      hideFooter: true,\n      rows: data.map(d => {\n        return { ...d,\n          id: Math.random().toString(20)\n        };\n      }),\n      columns: columns\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 52\n    }, this), data.length >= limit && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        fontSize: 14\n      },\n      children: \"Too many rows\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 32\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n\n_c2 = Lister;\nexport default Lister;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"RenderCell\");\n$RefreshReg$(_c2, \"Lister\");","map":{"version":3,"sources":["/home/niels/src/js/react/inputter/src/components/Lister.js"],"names":["React","DataGrid","useHistory","RenderCell","data","history","console","log","row","cursor","kafka_offset","columns","field","headerName","flex","Lister","limit","height","width","length","map","d","id","Math","random","toString","fontSize"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,wBAAzB;AACA,SAASC,UAAT,QAA2B,kBAA3B;;;AAEA,MAAMC,UAAU,GAAGC,IAAI,IAAI;AAAA;;AACzB,QAAMC,OAAO,GAAGH,UAAU,EAA1B,CADyB,CAEzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACAI,EAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ,EAAmBH,IAAI,CAACI,GAAxB;AACA,sBACE;AACE;AACA,IAAA,KAAK,EAAE;AAACC,MAAAA,MAAM,EAAE;AAAT,KAFT;AAAA,sBAGKL,IAAI,CAACI,GAAL,CAASE,YAHd;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD,CAlBD;;GAAMP,U;UACYD,U;;;KADZC,U;AAoBN,MAAMQ,OAAO,GAAG,CACd;AAAEC,EAAAA,KAAK,EAAE,aAAT;AAAwBC,EAAAA,UAAU,EAAE,aAApC;AAAmDC,EAAAA,IAAI,EAAE;AAAzD,CADc,EAEd;AAAEF,EAAAA,KAAK,EAAE,cAAT;AAAyBC,EAAAA,UAAU,EAAE,cAArC;AAAqDC,EAAAA,IAAI,EAAE,GAA3D;AAAgEX,EAAAA;AAAhE,CAFc,EAGd;AAAES,EAAAA,KAAK,EAAE,iBAAT;AAA4BC,EAAAA,UAAU,EAAE,iBAAxC;AAA2DC,EAAAA,IAAI,EAAE;AAAjE,CAHc,EAId;AAAEF,EAAAA,KAAK,EAAE,kBAAT;AAA6BC,EAAAA,UAAU,EAAE,kBAAzC;AAA6DC,EAAAA,IAAI,EAAE;AAAnE,CAJc,CAAhB;;AAOA,MAAMC,MAAM,GAAG,CAAC;AAACX,EAAAA,IAAD;AAAOY,EAAAA;AAAP,CAAD,KAAmB;AAChC,sBACE;AAAK,IAAA,KAAK,EAAE;AAAEC,MAAAA,MAAM,EAAE,MAAV;AAAkBC,MAAAA,KAAK,EAAE;AAAzB,KAAZ;AAAA,eACId,IAAI,CAACe,MAAL,GAAc,CAAd,IAAmBf,IAAI,CAACe,MAAL,GAAcH,KAAlC,iBAA4C,QAAC,QAAD;AAAU,MAAA,UAAU,MAApB;AAAqB,MAAA,IAAI,EAAEZ,IAAI,CAACgB,GAAL,CAASC,CAAC,IAAI;AACpF,eAAO,EAAE,GAAGA,CAAL;AAAQC,UAAAA,EAAE,EAAEC,IAAI,CAACC,MAAL,GAAcC,QAAd,CAAuB,EAAvB;AAAZ,SAAP;AACD,OAFuE,CAA3B;AAEzC,MAAA,OAAO,EAAEd;AAFgC;AAAA;AAAA;AAAA;AAAA,YAD/C,EAIGP,IAAI,CAACe,MAAL,IAAeH,KAAf,iBAAwB;AAAG,MAAA,KAAK,EAAE;AAACU,QAAAA,QAAQ,EAAE;AAAX,OAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJ3B;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAQD,CATD;;MAAMX,M;AAWN,eAAeA,MAAf","sourcesContent":["import React from 'react'\nimport { DataGrid } from '@material-ui/data-grid'\nimport { useHistory } from 'react-router-dom'\n\nconst RenderCell = data => {\n  const history = useHistory()\n  // const onClick = _ => {\n  //   history.push({\n  //     pathname: `/details/${data.row.kafka_topic}/${data.row.kafka_offset}`,\n  //     state: {\n  //       identifierType: data.row.identifier_type,\n  //       identifierValue: data.row.identifier_value\n  //     }\n  //   })\n  // }\n  console.log('HOI', data.row)\n  return (\n    <div\n      // onClick={onClick}\n      style={{cursor: 'pointer'}}\n    >aap{data.row.kafka_offset}</div>\n  )\n}\n\nconst columns = [\n  { field: 'kafka_topic', headerName: 'Kafka Topic', flex: 1 },\n  { field: 'kafka_offset', headerName: 'Kafka Offset', flex: 0.4, RenderCell },\n  { field: 'identifier_type', headerName: 'Identifier Type', flex: 0.6 },\n  { field: 'identifier_value', headerName: 'Identifier Value', flex: 1 },\n]\n\nconst Lister = ({data, limit}) => {\n  return (\n    <div style={{ height: '82vh', width: '100%' }}>\n      {(data.length > 0 && data.length < limit) && <DataGrid hideFooter rows={data.map(d => {\n        return { ...d, id: Math.random().toString(20)}\n      })} columns={columns} />}\n      {data.length >= limit && <p style={{fontSize: 14}}>Too many rows</p>}\n    </div>\n  )\n}\n\nexport default Lister\n"]},"metadata":{},"sourceType":"module"}